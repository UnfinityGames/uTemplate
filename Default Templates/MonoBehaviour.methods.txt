[For MonoBehaviour]

//Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
[Default] void Start()

//Awake is called when the script instance is being loaded.
void Awake()

//This function is called when the MonoBehaviour will be destroyed.
void OnDestroy()

//This function is called when the object becomes enabled and active.
void OnEnable()

//This function is called when the behaviour becomes disabled () or inactive.
void OnDisable()

//Update is called every frame, if the MonoBehaviour is enabled.
[Default] void Update()

//This function is called every fixed framerate frame, if the MonoBehaviour is enabled.
void FixedUpdate()

//LateUpdate is called every frame, if the Behaviour is enabled.
void LateUpdate()

//OnGUI is called for rendering and handling GUI events.
void OnGUI()

//This function is called when the list of children of the transform of the GameObject has changed.
void OnTransformChildrenChanged()

//This function is called when the parent property of the transform of the GameObject has changed.
void OnTransformParentChanged()

# Animator #

//Callback for setting up animation IK (inverse kinematics).
void OnAnimatorIK(int layerIndex)

//Callback for processing animation movements for modifying root motion.
void OnAnimatorMove()

# Application and Loading #
//Sent to all game objects when the player gets or loses focus.
void OnApplicationFocus(bool focusStatus)

//Sent to all game objects when the player pauses.
void OnApplicationPause(bool pauseStatus)

//Sent to all game objects before the application is quit.
void OnApplicationQuit()

//This function is called after a new level was loaded.
void OnLevelWasLoaded(int level)

# Audio #

//If OnAudioFilterRead is implemented, Unity will insert a custom filter into the audio DSP chain.
void OnAudioFilterRead(float[] data, int channels)

# Editor-only #

//Reset to default values. (Editor only)
void Reset()

//This function is called when the script is loaded or a value is changed in the inspector (Called in the editor only).
void OnValidate()

# Gizmos #

//Implement OnDrawGizmos if you want to draw gizmos that are also pickable and always drawn.
void OnDrawGizmos()

//Implement this OnDrawGizmosSelected if you want to draw gizmos only if the object is selected.
void OnDrawGizmosSelected()

# Mouse #

//OnMouseDown is called when the user has pressed the mouse button while over the GUIElement or Collider.
void OnMouseDown()

//OnMouseDrag is called when the user has clicked on a GUIElement or Collider and is still holding down the mouse.
void OnMouseDrag()

//Called when the mouse enters the GUIElement or Collider.
void OnMouseEnter()

//Called when the mouse is not any longer over the GUIElement or Collider.
void OnMouseExit()

//Called every frame while the mouse is over the GUIElement or Collider.
void OnMouseOver()

//OnMouseUp is called when the user has released the mouse button.
void OnMouseUp()

//OnMouseUpAsButton is only called when the mouse is released over the same GUIElement or Collider as it was pressed.
void OnMouseUpAsButton()

# Networking #

//Called on the client when you have successfully connected to a server.
void OnConnectedToServer()

//Called on the client when the connection was lost or you disconnected from the server.
void OnDisconnectedFromServer(NetworkDisconnection info)

//Called on the client when a connection attempt fails for some reason.
void OnFailedToConnect(NetworkConnectionError error)

//Called on clients or servers when there is a problem connecting to the MasterServer.
void OnFailedToConnectToMasterServer(NetworkConnectionError info)

//Called on clients or servers when reporting events from the MasterServer.
void OnMasterServerEvent(MasterServerEvent msEvent)

//Called on objects which have been network instantiated with Network.Instantiate.
void OnNetworkInstantiate(NetworkMessageInfo info)

//Called on the server whenever a new player has successfully connected.
void OnPlayerConnected(NetworkPlayer player)

//Called on the server whenever a player disconnected from the server.
void OnPlayerDisconnected(NetworkPlayer player)

//Used to customize synchronization of variables in a script watched by a network view.
void OnSerializeNetworkView(BitStream stream, NetworkMessageInfo info)

//Called on the server whenever a Network.InitializeServer was invoked and has completed.
void OnServerInitialized()

# Physics #

//OnCollisionEnter is called when this collider/rigidbody has begun touching another rigidbody/collider.
void OnCollisionEnter(Collision collision)

//Sent when an incoming collider makes contact with this object's collider (2D physics only).
void OnCollisionEnter2D(Collision2D coll)

//OnCollisionExit is called when this collider/rigidbody has stopped touching another rigidbody/collider.
void OnCollisionExit(Collision collisionInfo)

//Sent when a collider on another object stops touching this object's collider (2D physics only).
void OnCollisionExit2D(Collision2D coll)

//OnCollisionStay is called once per frame for every collider/rigidbody that is touching rigidbody/collider.
void OnCollisionStay(Collision collisionInfo)

//Sent each frame where a collider on another object is touching this object's collider (2D physics only).
void OnCollisionStay2D(Collision2D coll)

//OnControllerColliderHit is called when the controller hits a collider while performing a Move.
void OnControllerColliderHit(ControllerColliderHit hit)

//Called when a joint attached to the same game object broke.
void OnJointBreak(float breakForce)

//OnParticleCollision is called when a particle hits a collider.
void OnParticleCollision(GameObject other)

//OnTriggerEnter is called when the Collider other enters the trigger.
void OnTriggerEnter(Collider other)

//Sent when another object enters a trigger collider attached to this object (2D physics only).
void OnTriggerEnter2D(Collider2D other)

//OnTriggerExit is called when the Collider other has stopped touching the trigger.
void OnTriggerExit(Collider other)

//Sent when another object leaves a trigger collider attached to this object (2D physics only).
void OnTriggerExit2D(Collider2D other)

//OnTriggerStay is called once per frame for every Collider other that is touching the trigger.
void OnTriggerStay(Collider other)

//Sent each frame where another object is within a trigger collider attached to this object (2D physics only).
void OnTriggerStay2D(Collider2D other)

# Rendering #

//OnBecameInvisible is called when the renderer is no longer visible by any camera.
void OnBecameInvisible()

//OnBecameVisible is called when the renderer became visible by any camera.
void OnBecameVisible()

//OnPostRender is called after a camera finished rendering the scene.
void OnPostRender()

//OnPreCull is called before a camera culls the scene.
void OnPreCull()

//OnPreRender is called before a camera starts rendering the scene.
void OnPreRender()

//OnRenderImage is called after all rendering is complete to render image.
void OnRenderImage(RenderTexture src, RenderTexture dest)

//OnRenderObject is called after camera has rendered the scene.
void OnRenderObject()

//OnWillRenderObject is called once for each camera if the object is visible.
void OnWillRenderObject()